leasing-1.0.0
api-naming: API name does not follow the PascalCase naming convention. at data.name
access-control-check: APIs should not use 'NONE' as the access control option. at data.accessControl
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets.get.responses
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets.post.responses
parameters-defined: Parameters must have a name, in and description. at paths./assets/{assetId}.get.parameters.0
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets/{assetId}.get.responses
parameters-defined: Parameters must have a name, in and description. at paths./assets/{assetId}.put.parameters.0
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets/{assetId}.put.responses
parameters-defined: Parameters must have a name, in and description. at paths./assets/{assetId}.delete.parameters.0
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets/{assetId}.delete.responses
leasing-1.0.0
api-naming: API name does not follow the PascalCase naming convention. at data.name
access-control-check: APIs should not use 'NONE' as the access control option. at data.accessControl
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets.get.responses
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets.post.responses
parameters-defined: Parameters must have a name, in and description. at paths./assets/{assetId}.get.parameters.0
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets/{assetId}.get.responses
parameters-defined: Parameters must have a name, in and description. at paths./assets/{assetId}.put.parameters.0
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets/{assetId}.put.responses
parameters-defined: Parameters must have a name, in and description. at paths./assets/{assetId}.delete.parameters.0
minimum-two-response-code: Every operation should provide at least two response codes to cover success and error scenarios. at paths./assets/{assetId}.delete.responses
