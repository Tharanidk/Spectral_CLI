rules:
# Governance around API Specification
  request-schema:
    description: Every POST, PUT, and PATCH route must have a request body schema.
    message: "Every Request must have a request body schema."
    severity: error
    given: $.paths..[?(@property === "post" || @property === "put" || @property === "patch")].requestBody
    then:
      field: content.application/json.schema
      function: truthy
  response-schema:
    description: Every operation should have a response body schema defined for 200 status code responses.
    severity: error
    given: $.paths[*][*].responses[*].content.application/json.schema
    then:
      function: truthy # cannot be false, "",0,null,undefined
  minimum-two-response-code:
    description: Every operation should provide at least two response codes to cover success and error scenarios.
    severity: error
    given: $.paths[*][*].responses
    then:
      function: schema
      functionOptions:
        schema:
          minProperties: 2
  parameters-defined:
    description: Parameters must have a name, in and description.
    severity: error
    given: $.paths[*][*].parameters[*]
    then:
      function: schema
      functionOptions:
        schema:
          required: [name, in, description]
          properties:
            name:
              type: string
            in:
              type: string
            description:
              type: string

